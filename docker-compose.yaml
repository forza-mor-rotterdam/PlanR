version: "3"
services:
  gateway:
    container_name: planr.mor.local
    build: ./nginx
    volumes:
      - ./nginx/nginx-default.development.conf:/etc/nginx/conf.d/default.conf
      - ./media:/media
    depends_on:
      planr_app:
        condition: service_started
    ports:
      - 8003:8003
    networks:
      mor_bridge_network:
    env_file:
      - .env.local
  planr_app:
    build: ./app
    env_file:
      - .env.local
    volumes:
      - ./media:/media
      - ./app:/app
    depends_on:
      redis:
        condition: service_started
      database:
        condition: service_started
    networks:
      - planr_network
      - mor_bridge_network
    command: ["bash", "/app/deploy/docker-entrypoint.development.sh"]
    restart: always

  redis:
    image: redis
    networks:
      - planr_network
    ports:
      - "6379"

  database:
    image: postgis/postgis:11-3.3
    shm_size: "1024m"
    ports:
      - "7997:5432"
    env_file:
      - .env.local
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - planr_network

  app_celery_worker:
    build: ./app
    command: "celery -A config worker -l info"
    depends_on:
      database:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ./media:/media
    env_file:
      - .env.local
    networks:
      - planr_network
      - mor_bridge_network

  app_celery_beat:
    build: ./app
    command: "celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      database:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ./media:/media
    env_file:
      - .env.local
    networks:
      - planr_network
      - mor_bridge_network

  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      MERCURE_EXTRA_DIRECTIVES: |
          cors_origins "http://planr.mor.local:8003"
          subscriptions
      SERVER_NAME: ':80'
    # command: /usr/bin/caddy run --config /etc/caddy/Caddyfile.dev
    env_file:
      - .env.local
    ports:
      - '7002:80'
      - '443'
    networks:
      - planr_network
    volumes:
      - mercure_data:/data
      - mercure_config:/config

volumes:
  postgres-data:
  mercure_data:
  mercure_config:

networks:
  planr_network:
    external: true
  mor_bridge_network:
    external: true
